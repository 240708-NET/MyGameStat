name: API Build and Deploy
#triggers
on:
  push:
  #conditions
    branches: # Specify the branch that needs deployment (checkup)
      - workflow

    # Specify the folder that trigger build and deployment on changes   
  pull_request:    
    branches:
      - workflow 
  workflow_dispatch: # allow action to run

# tasks to complete (actual pipeline creation)
jobs:
  #each job will run on a new vm(build agent)
  build:
    runs-on: ubuntu-latest #what type of vm will this job be performed on

    #what steps we take to complete the job
    steps:
      # We tell the VM the source code
    - name: Checkout The Repo
      uses: actions/checkout@v4

    - name: Setup .NET #instruction to tell the VM will be based on .NET version 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

     #install dependancies 
    - name: Dotnet Restore
      run: dotnet restore ./src/Web/API/

      #start building .net project
    - name: Dotnet Build
      run: dotnet build ./src/Web/API/ --no-restore
      

       #containerize
  dockerize:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      #check if the system is working
    - name: dockerize-sanity-check
      run: echo "dockerize sanity check"
      
        # Specify the source code
    - name: Checkout Source
      uses: actions/checkout@v4
    
          #Install docker
    - name: Install Docker
      uses: docker/setup-buildx-action@v2
  
          # login to our docker account
    - name: Login to dockerhub and push
      uses: docker/login-action@v2
      with:
        registry: https://index.docker.io/v1/
            # We use the github repository secret to store user name password
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push to dockerhub
      uses: docker/build-push-action@v5
      with:
        context: ./MyGameStat/
        push: true
        tags: mygamestat-backend${{ github.sha }}
    
        
        
  deploy:
    # Specify which job needs to be finished first
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      # Check the system
      - name: deploy-sanity-check
        run: echo "Keep deploying"

     #- name: Deploy to Azure Web App
     #   uses: azure/webapps-deploy@v2
        #with:
          #app-name: 'patienttracker-api'
          #slot-name: 'production'
          #publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_API }}
          #images: 'index.docker.io/mygamestat-backend:${{ github.sha }}'
      
    